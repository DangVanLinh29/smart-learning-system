import requests
import urllib3
import sys
sys.stdout.reconfigure(encoding='utf-8')

# T·∫Øt c·∫£nh b√°o v·ªÅ ch·ª©ng ch·ªâ b·∫£o m·∫≠t (InsecureRequestWarning)
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# --- KHU V·ª∞C C√ÅC H√ÄM X·ª¨ L√ù API TLU ---

def authenticate_tlu(username, password): 
    """
    L·∫•y Access Token, x√°c th·ª±c, v√† l·∫•y th√¥ng tin c∆° b·∫£n c·ªßa sinh vi√™n.
    S·ª¨ D·ª§NG M·∫¨T KH·∫®U ƒê∆Ø·ª¢C G·ª¨I T·ª™ FRONTEND.
    """
    token_url = "https://sinhvien1.tlu.edu.vn/education/oauth/token"

    credentials = {
        "username": username,
        "password": password,
        "grant_type": "password",
        "client_id": "education_client",
        "client_secret": "password"
    }
    access_token = None

    try:
        # 1. L·∫§Y TOKEN
        token_response = requests.post(token_url, data=credentials, verify=False)
        token_response.raise_for_status() 
        token_data = token_response.json()
        access_token = token_data.get("access_token")

        if not access_token:
            return None

        # 2. L·∫§Y TH√îNG TIN NG∆Ø·ªúI D√ôNG B·∫∞NG TOKEN
        user_info = fetch_student_data(access_token)

        if user_info:
            # Tr·∫£ v·ªÅ token v√† th√¥ng tin user
            return {
                **user_info,
                "access_token": access_token,
                "success": True
            }
        return None 

    except requests.exceptions.HTTPError as e:
        print(f"L·ªñI TLU API (X√°c th·ª±c): {e.response.status_code}")
        print(f"Response Error: {e.response.text}")
        return None
    except requests.exceptions.RequestException as e:
        print(f"L·ªñI TLU API (K·∫øt n·ªëi): {e}")
        return None
    except Exception as e:
        print(f"L·ªñI KH√îNG X√ÅC ƒê·ªäNH: {e}")
        return None


def fetch_student_data(access_token):
    """
    L·∫•y th√¥ng tin c√° nh√¢n c·ªßa sinh vi√™n t·ª´ TLU API.
    """
    url = "https://sinhvien1.tlu.edu.vn/education/api/users/getCurrentUser"
    headers = {"Authorization": f"Bearer {access_token}", "Accept": "application/json"}

    try:
        response = requests.get(url, headers=headers, verify=False)
        response.raise_for_status()
        data = response.json()
        return {
            "student_id": data.get('username', 'N/A'),
            "name": data.get('displayName', 'N/A'),
            "major": "H·ªá th·ªëng th√¥ng tin" # Gi·∫£ ƒë·ªãnh theo th√¥ng tin c·ªßa anh
        }
    except requests.exceptions.RequestException as e:
        print(f"L·ªñI TLU API (User Data): {e}")
        return None


def fetch_student_marks(access_token):
    """
    L·∫§Y TO√ÄN B·ªò ƒêI·ªÇM T·ªîNG K·∫æT (T·∫§T C·∫¢ H·ªåC K·ª≤)
    """
    # üö® S·ª¨A L·∫†I URL: D√πng API ƒë√∫ng (getListMarkDetailStudent)
    url = "https://sinhvien1.tlu.edu.vn/education/api/studentsubjectmark/getListMarkDetailStudent" 
    headers = {"Authorization": f"Bearer {access_token}", "Accept": "application/json"}

    try:
        response = requests.get(url, headers=headers, verify=False)
        response.raise_for_status()
        data = response.json()

        if not data:
             print("C·∫¢NH B√ÅO: TLU API (StudentMark) tr·∫£ v·ªÅ danh s√°ch ƒëi·ªÉm r·ªóng.")
        else:
            print(f"Successfully fetched {len(data)} marks from TLU API.")
        return data

    except requests.exceptions.HTTPError as e:
        # X·ª≠ l√Ω ri√™ng l·ªói 404 (Not Found) n·∫øu c√≥
        if e.response.status_code == 404:
            print(f"L·ªñI TLU API (StudentMark): 404 Not Found. URL API '{url}' c√≥ th·ªÉ ƒë√£ sai.")
        else:
            print(f"L·ªñI TLU API (StudentMark): {e}")
        return None
    except requests.exceptions.RequestException as e:
        print(f"L·ªñI TLU API (StudentMark - K·∫øt n·ªëi): {e}")
        return None